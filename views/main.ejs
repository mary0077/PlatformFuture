<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Future Plataforma</title>
    <link rel="stylesheet" href="/css/painel.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>
<body>
    <header>
        <div class="search-container">
            <input type="text" placeholder="Pesquisar...">
            <button class="search-button">
                <i class="fas fa-search"></i>
            </button>            
        </div>
        <div class="user-account">
            <div class="user-circle" id="user-initial">U</div>
            <span id="user-name">Usuário</span>
        </div>   
    </header>
    
    <main id="main-content">
        <!-- Alunos Cadastrados -->
        <section class="students-section">
            <div class="section-header">
                <h2>Alunos Cadastrados</h2>
                <div class="buttons">
                    <button class="add-refresh" onclick="showForm('aluno')">Inserir</button>
                    <button class="add-refresh" onclick="refreshAlunos()">Atualizar</button>
                </div>
            </div>
            <div class="students-list" id="students-list">
                <!-- Lista de alunos será gerada aqui pelo JavaScript -->
            </div>
        </section>

        <!-- Salas Disponíveis -->
        <section class="rooms-section">
            <div class="section-header">
                <h2>Salas Disponíveis</h2>
                <div class="buttons">
                    <button class="add-refresh" onclick="showForm('sala')">Inserir</button>
                    <button class="add-refresh" onclick="refreshSalas()">Atualizar</button>
                </div>
            </div>
            <div class="rooms-list" id="room-list">
                <% data.rooms.forEach((room) => { %>
                    <div class="room-card">
                        <p><strong>Curso:</strong> <%= room.nome %></p>
                        <p><strong>Instrutor:</strong> <%= room.instrutor %></p>
                        <p><strong>Alunos:</strong> <%= room.Alunos %></p>
                        <button class="delete-button" onclick="excluirSala(<%= room.id %>)">Excluir</button>
                    </div>
                <% }) %>
            </div>
        </section>
    </main>

    <!-- Modal Formulário -->
    <div id="modal" class="modal hidden">
        <div class="modal-content">
            <span class="close-button" onclick="closeForm()">&times;</span>
            <form id="form-aluno" class="hidden">
                <h2>Adicionar Aluno</h2>
                <input type="text" placeholder="Nome" name="nome" required>
                <input type="email" placeholder="Email" name="email" required>
                <input type="number" placeholder="Idade" name="idade" required>
                <input type="number" placeholder="Nota 1º Semestre" name="nota_primeiro_semestre" required>
                <input type="number" placeholder="Nota 2º Semestre" name="nota_segundo_semestre" required>
                <button type="button" onclick="adicionarAluno()">Adicionar</button>
            </form>

            <form id="form-sala" class="hidden">
                <h2>Adicionar Sala</h2>
                <input type="text" placeholder="Nome do Curso" name="nome" required>
                <input type="text" placeholder="Instrutor" name="instrutor" required>
                <input type="number" placeholder="Número de Alunos" name="Alunos" required>
                <button type="button" onclick="adicionarSala()">Adicionar</button>
            </form>
        </div>
    </div>

    <script>
        
const formData = new FormData(document.getElementById('form-aluno'));
const dados = Object.fromEntries(formData);
dados.nome_professor = document.getElementById('user-name').value;

// BUGG AQUI EXBIÇÃO DO NOME USUARIO

document.addEventListener('DOMContentLoaded', () => {
    const userName = sessionStorage.getItem('userName');

    console.log("Nome do usuário:", userName); // Debug

    if (userName) {
        document.getElementById('user-name').textContent = userName;
        document.getElementById('user-initial').textContent = userName.charAt(0).toUpperCase();
    } else {
        document.getElementById('user-name').textContent = "Usuário não encontrado";
        document.getElementById('user-initial').textContent = "U";
    }

    refreshAlunos();
});

        function getAuthToken() {
        return sessionStorage.getItem('authToken');
        }

    function showForm() {
    const nomeProfessorInput = document.getElementById('user-name');
    if (nomeProfessorInput && !nomeProfessorInput.value) {
        nomeProfessorInput.value = sessionStorage.getItem('userName') || '';
    }
    document.getElementById('modal').classList.remove('hidden');
    document.getElementById('main-content').style.filter = 'blur(5px)';
}


        function closeForm() {
            document.getElementById('modal').classList.add('hidden');
            document.getElementById('main-content').style.filter = 'none';
        }

        async function adicionarAluno() {
            const authToken = getAuthToken();
            const formData = new FormData(document.getElementById('form-aluno'));
            const dados = Object.fromEntries(formData);

            try {
                const res = await fetch('/alunos', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": "Bearer " + authToken
                    },
                    body: JSON.stringify(dados)
                });
                
                if (res.ok) {
                    alert("Aluno cadastrado com sucesso!");
                    refreshAlunos();
                    closeForm();
                }
            } catch (err) {
                console.log(err);
            }
        }

        async function refreshAlunos() {
    const authToken = getAuthToken();
    const studentsDOM = document.getElementById('students-list');

    try {
        const res = await fetch('/alunos', {
            method: "GET",
            headers: {
                "Authorization": "Bearer " + authToken
            }
        });

        if (res.ok) {
            const alunos = await res.json();
            console.log("Alunos recebidos:", alunos); // <-- Verifica se os alunos estão chegando
            studentsDOM.innerHTML = "";

            alunos.forEach(aluno => {
                console.log("Processando aluno:", aluno); // <-- Verifica se está processando os alunos corretamente
                studentsDOM.innerHTML += `
                    <div class="student-card">
                        <p><strong>Nome:</strong> ${aluno.nome}</p>
                        <p><strong>Idade:</strong> ${aluno.idade}</p>
                        <p><strong>Email:</strong> ${aluno.email}</p>
                        <p><strong>Professor:</strong> ${aluno.nome_professor}</p>
                        <button class="delete-button" onclick="excluirAluno(${aluno.id})">Excluir</button>
                    </div>`;
            });
        } else {
            console.error("Erro ao buscar alunos:", res.status);
        }
    } catch (err) {
        console.log("Erro ao carregar alunos:", err);
    }
}

    async function adicionarAluno() {
    const nome = document.getElementById('nome').value;
    const email = document.getElementById('email').value;
    const idade = document.getElementById('idade').value;
    const NotaPrimeiroSemestre = parseFloat(document.getElementById('NotaPrimeiroSemestre').value);
    const NotaSegundoSemestre = parseFloat(document.getElementById('NotaSegundoSemestre').value);
    const nome_professor = document.getElementById('nome_professor').value;

    console.log({ nome, email, idade, NotaPrimeiroSemestre, NotaSegundoSemestre, nome_professor });

    if (isNaN(NotaPrimeiroSemestre) || isNaN(NotaSegundoSemestre)) {
        alert("As notas devem ser números válidos!");
        return;
    }

    const alunoData = {
        nome,
        email,
        idade,
        NotaPrimeiroSemestre,
        NotaSegundoSemestre,
        nome_professor
    };

    const response = await fetch('/api/alunos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${getAuthToken()}`
        },
        body: JSON.stringify(alunoData)
    });

    if (response.ok) {
        closeForm();
        refreshAlunos();
    } else {
        const data = await response.json();
        alert(data.error || 'Erro ao cadastrar aluno');
    }
}
        async function excluirAluno(id) {
            const authToken = getAuthToken();

            try {
                const res = await fetch(`/alunos/${id}`, {
                    method: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + authToken
                    }
                });

                if (res.ok) {
                    refreshAlunos();
                }
            } catch (err) {
                console.log(err);
            }
        }
    </script>
</body>
</html>
